repos:
  - repo: https://github.com/python-poetry/poetry
    rev: 1.4.2
    hooks:
      - id: poetry-check
      - id: poetry-lock
      - id: poetry-export
        args: [ "-f", "requirements.txt", "-o", "requirements.txt" ]
  # General cleaning and checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.3.0
    hooks:
      - id: check-added-large-files # No accidental huge files
      - id: trailing-whitespace
      - id: end-of-file-fixer
      # Syntactic checks for filetypes
      # - id: check-yaml
      # - id: check-json
      # - id: check-toml
  # Auto fix old Python conventions and code smells
  - repo: https://github.com/asottile/pyupgrade
    rev: v2.38.0
    hooks:
      - id: pyupgrade
        args: [--py38-plus, --keep-runtime-typing]
  # Remove unused imports
  - repo: https://github.com/PyCQA/autoflake
    rev: v1.6.1
    hooks:
      - id: autoflake
        args:
          - --in-place
          - --remove-all-unused-imports
          - --expand-star-imports
          - --remove-unused-variables
  # Sort imports
  - repo: https://github.com/PyCQA/isort
    rev: 5.12.0
    hooks:
      - id: isort
  # Format code in doc strings
  - repo: https://github.com/asottile/blacken-docs
    rev: v1.12.1
    hooks:
      - id: blacken-docs
        additional_dependencies: [black==22.6.0]
  # Format code
  - repo: https://github.com/psf/black
    rev: 22.8.0
    hooks:
      - id: black
        args: [--safe, --quiet]
  # Linting, see .flake8 file for config
  - repo: https://github.com/PyCQA/flake8
    rev: 5.0.4
    hooks:
      - id: flake8
        additional_dependencies: [
            # https://github.com/PyCQA/flake8-bugbear
            flake8-bugbear, # Catch common pitfalls with exceptions
            # https://github.com/gforcada/flake8-builtins
            flake8-builtins, # No shadowing of builtins
            # https://github.com/adamchainz/flake8-comprehensions
            flake8-comprehensions, # Catch common pitfalls with comprehensions
            # https://gitlab.com/RoPP/flake8-use-pathlib
            flake8-use-pathlib, # Replace 'os' methods with pathlib
          ]
  - repo: local
    hooks:
      - id: pylint
        name: pylint
        # we need this so the local config gets used and not the global config
        entry: poetry run pylint
        language: system
        types: [python]
        args: [
            "-rn", # Only display messages
            "-sn", # Don't display the score
          ]
  # Static type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v0.982
    hooks:
      - id: mypy
