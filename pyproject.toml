[tool.poetry]
name = "python-template"
version = "0.1.0"
description = ""
authors = ["Jelle <jellevisser1994@hotmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.9"

[tool.poetry.dev-dependencies]
pylint = "^2.14.5"
pytest = "^7.1.2"
pre-commit = "^2.20.0"
pytest-cov = "^3.0.0"
pytest-assume = "^2.4.3"
pytest-mock = "^3.9.0"
black = "^22.6.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120

[tool.isort]
profile = "black"

[tool.mypy]
ignore_missing_imports = true
check_untyped_defs = true
show_error_codes = true
warn_unused_ignores = true
# strict = true

[tool.pylint.main]
jobs = 1
ignored-modules = ["torch", "pytest"]
generated-members = ["numpy.*", "torch.*", "pytest.*", "cv2.*"]

[tool.pylint.format]
max-line-length = 120

[tool.pylint."messages control"]
# Disable the message, report, category or checker with the given id(s). You can
# either give multiple identifiers separated by comma (,) or put this option
# multiple times (only on the command line, not in the configuration file where
# it should appear only once). You can also use "--disable=all" to disable
# everything first and then re-enable specific checks. For example, if you want
# to run only the similarities checker, you can use "--disable=all
# --enable=similarities". If you want to run only the classes checker, but have
# no Warning level messages displayed, use "--disable=all --enable=classes
# --disable=W".
disable = [
    "raw-checker-failed",
    "bad-inline-option",
    "locally-disabled",
    "file-ignored",
    "suppressed-message",
    "pointless-string-statement",
    "useless-suppression",
    "deprecated-pragma",
    "use-symbolic-message-instead",
    "too-many-instance-attributes", # with pytorch and such, this becomes impossible
    "consider-using-from-import", # same as previous
    "too-many-locals", # same as previous
    "too-few-public-methods", # when using pydantic, this can happen often with config classes
    "too-many-branches", # this is for the reviewer(s) to decide
    "C0114", # missing docstring module
    "C0116", # missing docstring function / method
    "C0115", # missing docstring class
    "R0913", # too many arguments
    "R0801", # similar lines in two files
    "C0325", # unnecessary parenteses after 'not'
    "W0511", # TODO's in code
]
extension-pkg-whitelist = "pydantic"
